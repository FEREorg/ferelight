from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ferelight.models.base_model import Model
from ferelight import util


class SegmentbytimeDatabasePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, objectid=None, timestamp=None):  # noqa: E501
        """SegmentbytimeDatabasePostRequest - a model defined in OpenAPI

        :param objectid: The objectid of this SegmentbytimeDatabasePostRequest.  # noqa: E501
        :type objectid: str
        :param timestamp: The timestamp of this SegmentbytimeDatabasePostRequest.  # noqa: E501
        :type timestamp: float
        """
        self.openapi_types = {
            'objectid': str,
            'timestamp': float
        }

        self.attribute_map = {
            'objectid': 'objectid',
            'timestamp': 'timestamp'
        }

        self._objectid = objectid
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'SegmentbytimeDatabasePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _segmentbytime__database__post_request of this SegmentbytimeDatabasePostRequest.  # noqa: E501
        :rtype: SegmentbytimeDatabasePostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def objectid(self) -> str:
        """Gets the objectid of this SegmentbytimeDatabasePostRequest.

        The object ID to find the segment in.  # noqa: E501

        :return: The objectid of this SegmentbytimeDatabasePostRequest.
        :rtype: str
        """
        return self._objectid

    @objectid.setter
    def objectid(self, objectid: str):
        """Sets the objectid of this SegmentbytimeDatabasePostRequest.

        The object ID to find the segment in.  # noqa: E501

        :param objectid: The objectid of this SegmentbytimeDatabasePostRequest.
        :type objectid: str
        """

        self._objectid = objectid

    @property
    def timestamp(self) -> float:
        """Gets the timestamp of this SegmentbytimeDatabasePostRequest.

        The timestamp to match against.  # noqa: E501

        :return: The timestamp of this SegmentbytimeDatabasePostRequest.
        :rtype: float
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: float):
        """Sets the timestamp of this SegmentbytimeDatabasePostRequest.

        The timestamp to match against.  # noqa: E501

        :param timestamp: The timestamp of this SegmentbytimeDatabasePostRequest.
        :type timestamp: float
        """

        self._timestamp = timestamp
