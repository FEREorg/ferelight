from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ferelight.models.base_model import Model
from ferelight import util


class SegmentinfosPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, segmentids=None):  # noqa: E501
        """SegmentinfosPostRequest - a model defined in OpenAPI

        :param segmentids: The segmentids of this SegmentinfosPostRequest.  # noqa: E501
        :type segmentids: List[str]
        """
        self.openapi_types = {
            'segmentids': List[str]
        }

        self.attribute_map = {
            'segmentids': 'segmentids'
        }

        self._segmentids = segmentids

    @classmethod
    def from_dict(cls, dikt) -> 'SegmentinfosPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _segmentinfos_post_request of this SegmentinfosPostRequest.  # noqa: E501
        :rtype: SegmentinfosPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def segmentids(self) -> List[str]:
        """Gets the segmentids of this SegmentinfosPostRequest.

        The unique identifiers of the segments.  # noqa: E501

        :return: The segmentids of this SegmentinfosPostRequest.
        :rtype: List[str]
        """
        return self._segmentids

    @segmentids.setter
    def segmentids(self, segmentids: List[str]):
        """Sets the segmentids of this SegmentinfosPostRequest.

        The unique identifiers of the segments.  # noqa: E501

        :param segmentids: The segmentids of this SegmentinfosPostRequest.
        :type segmentids: List[str]
        """

        self._segmentids = segmentids
